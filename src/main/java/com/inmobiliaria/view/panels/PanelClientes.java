/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.inmobiliaria.view.panels;

import com.inmobiliaria.controller.ClienteController;
import com.inmobiliaria.model.Cliente;
import com.inmobiliaria.view.Dashboard;
import com.inmobiliaria.view.forms.FormCliente;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class PanelClientes extends javax.swing.JPanel {
    
    private final Dashboard dashboard;

    /**
     * Creates new form Agentes
     * @param dashboard
     */
    public PanelClientes(Dashboard dashboard) {
        initComponents();
        this.dashboard = dashboard;
        mostrarClientes();
    }
    
    private void mostrarClientes() {
        
        DefaultTableModel tablaModelo = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) { //no permite editar
                return false;
            }
        };
        tablaModelo.setColumnIdentifiers(new Object[] {
            "Cédula", "Fecha Expedición", "Nombres", "Apellidos", "Fecha Nacimiento", "Dirección", 
            "Correo", "Telefono 1", "Telefono 2"
        });
        ClienteController clienteController = new ClienteController();
        try {
            for (Cliente clienteModel : clienteController.listarTodos()) {
                String tel1 = "";
                String tel2 = "";
                
                if (clienteModel.getTelefonos().size() > 0) {
                    tel1 = clienteModel.getTelefonos().get(0);
                    if (clienteModel.getTelefonos().size() > 1) {
                        tel2 = clienteModel.getTelefonos().get(1);
                    }
                }
                tablaModelo.addRow(new Object[]{
                    clienteModel.getCedula(),
                    clienteModel.getFechaExpDoc(),
                    clienteModel.getNombres(),
                    clienteModel.getApellidos(),
                    clienteModel.getFechaNacimiento(),
                    clienteModel.getDireccion(),
                    clienteModel.getCorreo(),
                    tel1,
                    tel2

                });
            }
            tablaClientes.setModel(tablaModelo);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar clientes: " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnNuevoRegistro = new javax.swing.JButton();
        btnActualizarCliente = new javax.swing.JButton();
        btnEliminarCliente = new javax.swing.JButton();
        btnConsultarCliente = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtConsulta = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(985, 582));

        content.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes Registrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 13), new java.awt.Color(51, 51, 51))); // NOI18N

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Fecha expedición", "Nombres", "Apellidos", "Fecha de nacimiento", "Dirección", "Correo", "Celular 1", "Celular 2"
            }
        ));
        jScrollPane1.setViewportView(tablaClientes);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 963, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
        );

        btnNuevoRegistro.setBackground(new java.awt.Color(212, 167, 140));
        btnNuevoRegistro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnNuevoRegistro.setForeground(new java.awt.Color(51, 51, 51));
        btnNuevoRegistro.setText("Nuevo");
        btnNuevoRegistro.setToolTipText("");
        btnNuevoRegistro.setBorderPainted(false);
        btnNuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoRegistroActionPerformed(evt);
            }
        });

        btnActualizarCliente.setBackground(new java.awt.Color(212, 167, 140));
        btnActualizarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnActualizarCliente.setForeground(new java.awt.Color(51, 51, 51));
        btnActualizarCliente.setText("Modificar");
        btnActualizarCliente.setBorderPainted(false);
        btnActualizarCliente.setFocusPainted(false);
        btnActualizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarClienteActionPerformed(evt);
            }
        });

        btnEliminarCliente.setBackground(new java.awt.Color(212, 167, 140));
        btnEliminarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEliminarCliente.setForeground(new java.awt.Color(51, 51, 51));
        btnEliminarCliente.setText("Eliminar");
        btnEliminarCliente.setBorderPainted(false);
        btnEliminarCliente.setFocusPainted(false);
        btnEliminarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarClienteActionPerformed(evt);
            }
        });

        btnConsultarCliente.setBackground(new java.awt.Color(212, 167, 140));
        btnConsultarCliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnConsultarCliente.setForeground(new java.awt.Color(51, 51, 51));
        btnConsultarCliente.setText("Consultar");
        btnConsultarCliente.setBorderPainted(false);
        btnConsultarCliente.setFocusPainted(false);
        btnConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarClienteActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Ingrese el número de cédula del cliente");

        txtConsulta.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel12)
                .addGap(27, 27, 27)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnActualizarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConsultarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(43, 43, 43)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoRegistroActionPerformed
        dashboard.showJPanel(new FormCliente(this.dashboard));
    }//GEN-LAST:event_btnNuevoRegistroActionPerformed

    private void btnActualizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarClienteActionPerformed
        int fila = tablaClientes.getSelectedRow();
        if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione el cliente");
        return;
        }
        // consultar cedula seleccionada de la tabla
        String cedula = tablaClientes.getValueAt(fila, 0).toString();
        ClienteController clienteController = new ClienteController();
        Cliente clienteEditar;
        try {
            clienteEditar = clienteController.consultarCedula(cedula); //obtener datos
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar el cliente: " + ex.getMessage());
            return;
        }
        if (clienteEditar != null) {
            FormCliente form = new FormCliente(dashboard, clienteEditar);
            dashboard.showJPanel(form);
        } else {
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
        }
    }//GEN-LAST:event_btnActualizarClienteActionPerformed

    private void btnEliminarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarClienteActionPerformed
        int fila = tablaClientes.getSelectedRow();
        if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Seleccione el cliente.");
        return;
        }
        
        String cedula = tablaClientes.getValueAt(fila, 0).toString();
        int confirmacion = JOptionPane.showConfirmDialog(this, "Seguro desea eliminar el cliente?", "Confirmacion", JOptionPane.WARNING_MESSAGE);
        System.out.println(confirmacion);

        try {
            if (confirmacion == 0) {
               ClienteController clienteController = new ClienteController();
                boolean eliminado = clienteController.eliminar(cedula);

                if (eliminado) {
                    JOptionPane.showMessageDialog(this, "Cliente eliminado correctamente.");
                    mostrarClientes();
                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo eliminar el cliente.");
                } 
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar cliente: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarClienteActionPerformed

    private void btnConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarClienteActionPerformed
        String cedula = txtConsulta.getText();
        
        ClienteController clienteController = new ClienteController();
        Cliente clienteEditar;
        try {
            clienteEditar = clienteController.consultarCedula(cedula); //obtener datos
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al cargar el cliente. " + ex.getMessage());
            return;
        }
        if (clienteEditar != null) {
            FormCliente form = new FormCliente(dashboard, clienteEditar);
            dashboard.showJPanel(form);
        } else {
            JOptionPane.showMessageDialog(this, "Cliente no encontrado.");
        }
    }//GEN-LAST:event_btnConsultarClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarCliente;
    private javax.swing.JButton btnConsultarCliente;
    private javax.swing.JButton btnEliminarCliente;
    private javax.swing.JButton btnNuevoRegistro;
    private javax.swing.JPanel content;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtConsulta;
    // End of variables declaration//GEN-END:variables
}
